S, declaration, type, expr, identifier, simpletype, stmt, assignment, arraytype, declaration, stepstmt, condstmt, ifstmt, untilstmt, inputstmt, outputstmt, factor, constant, INTEGER, cond
#, let, :, bool, char, integer, [, ], string, {, }, ;, =, +, -, *, /, %, not, <, <=, >, >=, !=, ==, for, (, ), check, elif, else, while, read, write, and, or, xor
S
S -> # stmt,
declaration -> let identifier : type ;,
simpletype -> bool | char | integer,
type -> simpletype | string,
stmt -> assignment | declaration | stepstmt | ifstmt | untilstmt | inputstmt | outputstmt,
assignment -> identifier = expr ;,
expr -> factor,
factor -> identifier | INTEGER | constant,
cond -> factor < factor | factor > factor | factor != factor,
stepstmt -> for ( assignment cond ; assignment ) stmt,
ifstmt -> check ( cond ) stmt else stmt,
untilstmt -> while ( cond ) stmt,
inputstmt -> read ( identifier ) ;,
outputstmt -> write ( factor ) ;